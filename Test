@Test
public void test_storeRates_save_repositoryException() throws Exception {
    // Create the request manually to ensure non-null data
    StoreRatesRequest request = new StoreRatesRequest();
    Data data = new Data();
    ProductRates productRates = new ProductRates();
    productRates.setOfferInstanceId("new-offer-instance-id");
    productRates.setOfferProductId("a1b2c3d4-e5f6-7890-abcd-ef1234567892");
    productRates.setProductName("Dummy Product");

    Rates rates = new Rates();
    rates.set("dummyKey", "dummyValue");

    productRates.setRates(Collections.singletonList(rates));
    data.setProductRates(Collections.singletonList(productRates));
    request.setData(data);  // âœ… This was missing

    // Create service instance
    StoreRatesServiceImpl storeRatesService1 = new StoreRatesServiceImpl();

    // Mock session & repository exception
    Session mockSession = Mockito.mock(Session.class);
    Mockito.doThrow(new RepositoryException("Simulated RepositoryException")).when(mockSession).save();
    Mockito.when(resourceResolvers.getResourceResolver(SubService.WRITE_CONTENT)).thenReturn(resourceResolver);
    Mockito.when(resourceResolver.adaptTo(Session.class)).thenReturn(mockSession);

    // This should not crash, only log the error
    storeRatesService1.storeRates(request, resourceResolvers);
}
