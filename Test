@Test
public void getContentInfoTestAsset() throws Exception {
    ContentFragmentServlet servlet = new ContentFragmentServlet();

    Resource asset = mock(Resource.class);
    Node assetNode = mock(Node.class);

    when(asset.getResourceType()).thenReturn("dam:Asset");
    when(asset.getPath()).thenReturn("/content/dam/bcuspublic-cf-folder/disclosure-x");
    when(asset.adaptTo(Node.class)).thenReturn(assetNode);
    when(assetNode.isNodeType("dam:Asset")).thenReturn(true);

    // --- Mock the ContentFragment adaptation ---
    com.adobe.cq.dam.cfm.ContentFragment cf = mock(com.adobe.cq.dam.cfm.ContentFragment.class);
    com.adobe.cq.dam.cfm.ContentElement element = mock(com.adobe.cq.dam.cfm.ContentElement.class);
    when(asset.adaptTo(com.adobe.cq.dam.cfm.ContentFragment.class)).thenReturn(cf);
    when(cf.getElement("disclosure-1")).thenReturn(element);
    when(element.getContent()).thenReturn("disclosure-1");

    Map<String, Object> parentJson = new HashMap<>();

    // --- Mock the static GlobalUtil method that caused NPE ---
    try (org.mockito.MockedStatic<com.bcuspublic.wcm.util.GlobalUtil> util =
                 org.mockito.Mockito.mockStatic(com.bcuspublic.wcm.util.GlobalUtil.class)) {
        util.when(() -> com.bcuspublic.wcm.util.GlobalUtil
                .getCustomDataTypeProperty(asset, resourceResolver))
            .thenReturn("disclosure-1");

        // --- Invoke private method ---
        Method m = ContentFragmentServlet.class.getDeclaredMethod(
                "getContentInfo",
                ResourceResolver.class,
                Resource.class,
                Map.class,
                String.class
        );
        m.setAccessible(true);
        m.invoke(servlet, resourceResolver, asset, parentJson, "data");
    }

    // --- Validate result ---
    assertTrue("Expected key 'disclosure-1' missing", parentJson.containsKey("disclosure-1"));
}
