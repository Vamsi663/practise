@Test
public void test_buildTreeViewForSecondaryOffers_NoOfferIds() throws Exception {
    Node pageContentNode = Mockito.mock(Node.class);
    Page page = Mockito.mock(Page.class);
    TreeViewNode treeViewNode = new TreeViewNode();
    ArrayList<TreeViewNode> nodes = new ArrayList<>();
    List<String> inputSecondaryOfferIds = Arrays.asList("someId");

    // Mock: no OFFERIDS
    Mockito.when(pageContentNode.hasProperty("OFFERIDS")).thenReturn(false);
    Mockito.when(page.getPath()).thenReturn("/content/testPage");

    associateOfferToPageSupportUnderTest
        .buildTreeViewForSecondaryOffers(pageContentNode, treeViewNode, nodes,
                                         page, resourceResolver, inputSecondaryOfferIds, workflowList);

    assertFalse(nodes.isEmpty());  // node still added in else
}

@Test
public void test_buildTreeViewForSecondaryOffers_SingleValue() throws Exception {
    Node pageContentNode = Mockito.mock(Node.class);
    Property property = Mockito.mock(Property.class);
    Page page = Mockito.mock(Page.class);
    TreeViewNode treeViewNode = new TreeViewNode();
    ArrayList<TreeViewNode> nodes = new ArrayList<>();
    List<String> inputSecondaryOfferIds = Arrays.asList("someId");

    Mockito.when(pageContentNode.hasProperty("OFFERIDS")).thenReturn(true);
    Mockito.when(pageContentNode.getProperty("OFFERIDS")).thenReturn(property);
    Mockito.when(property.isMultiple()).thenReturn(false);
    Mockito.when(property.getValue()).thenReturn(Mockito.mock(Value.class));
    Mockito.when(property.getValue().toString()).thenReturn("someId");

    associateOfferToPageSupportUnderTest
        .buildTreeViewForSecondaryOffers(pageContentNode, treeViewNode, nodes,
                                         page, resourceResolver, inputSecondaryOfferIds, workflowList);

    assertEquals(1, nodes.size());
}

@Test
public void test_fetchLandingPagesWithOfferIds_NoMatches() throws Exception {
    List<String> secondaryOfferIds = Arrays.asList("unmatchedId");

    List<TreeViewNode> result = associateOfferToPageSupport
        .fetchLandingPagesWithOfferIds(resourceResolver, secondaryOfferIds, "SECONDARY");

    assertTrue(result.isEmpty());
}

