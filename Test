@Test
public void test_fetchLandingPagesWithOfferIds_NoOfferIds() throws Exception {
    List<String> secondaryOfferIds = Arrays.asList("someId");

    Page page = Mockito.mock(Page.class);
    Resource resource = Mockito.mock(Resource.class);
    Node node = Mockito.mock(Node.class);

    when(resourceResolver.getResource(anyString())).thenReturn(resource);
    when(resource.adaptTo(Node.class)).thenReturn(node);
    when(page.getPath()).thenReturn("/content/testPage");
    when(node.hasProperty("OFFERIDS")).thenReturn(false);

    // Mock static calls inside OfferUtils
    try (MockedStatic<OfferUtils> offerUtils = Mockito.mockStatic(OfferUtils.class)) {
        offerUtils.when(() -> OfferUtils.isStoreFrontPage(any())).thenReturn(false);
        offerUtils.when(() ->
            OfferUtils.getSecondaryOfferIdsFromDialogUIStructure(any(), anyString()))
            .thenReturn(Collections.emptySet());

        AssociateOfferToPageSupport spy = Mockito.spy(associateOfferToPageSupportUnderTest);

        List<TreeViewNode> result =
            spy.fetchLandingPagesWithOfferIds(resourceResolver, secondaryOfferIds, "SECONDARY");

        assertFalse(result.isEmpty()); // ensures else branch executed
    }
}
